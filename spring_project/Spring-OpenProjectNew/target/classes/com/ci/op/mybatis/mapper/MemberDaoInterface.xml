<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- sql 설정 : sql문, 반환 타입, 파라미터 설정 -->

<mapper namespace="com.ci.op.member.dao.MemberDaoInterface">

		
	<!-- select의 결과를 객체에 바인딩 역할: 테이블의 컬럼명과 java beans의 변수의 이름이 틀린경우 -->
	<resultMap id="resultMember"
		type="com.ci.op.member.model.Member">
		<id property="uidx" column="uidx" />
		<result property="uid" column="uid" />
		<result property="upw" column="upw" />
		<result property="uname" column="uname" />
		<result property="uphoto" column="uphoto" />
		<result property="uphone" column="uphone" />
	</resultMap>

	<select id="selectTotalListXml"
			resultType="com.ci.op.member.model.MemberXML"
		>
	
	select*from finalproject.member order by uidx desc
	
	</select>






	<select id="selectByIdx"
		resultType="com.ci.op.member.model.Member"
	>
	
	select * from finalproject.member where uidx=#{uidx}
	
	
	</select>





	<select id="selectByIdPw"
		resultType="com.ci.op.member.model.Member">

		select* from finalproject.member where uid=#{param1} and
		upw=#{param2}

	</select>



	<!-- 검색: id, name, id or name map.put("searchType", "id") name, both -->

<!-- map => HashMap -->

	<select id="totalCount" parameterType="map" resultType="int">
	<!-- #{search.searchType} -->
	
	select count(*) from finalproject.member
	
	<where>
		<if test="searchType != null">
			<if test="searchType == 'both'">
				<include refid="whereID"/>
				<include refid="whereName"/>
			</if>
			<if test="searchType == 'id'">
				<include refid="whereID"/>
			</if>
			<if test="searchType == 'name'">
				<include refid="whereName"/>
			</if>
		</if>
	</where>
	
	
	</select>
	
	
	<select id="selectList"
			parameterType="map"
			resultMap="resultMember"
	>
		
		select * from finalproject.member
		
		<include refid="lsitSearch"/>
		
		limit #{startRow}, #{count}
		
		</select>

<sql id="lsitSearch">
		
		<where>
			<if test="searchType != null">
				<if test="searchType == 'both'">
					<include refid="whereID"/>
					<include refid="whereName"/>
				</if>
				<if test="searchType == 'id'">
					<include refid="whereID"/>
				</if>
				<if test="searchType == 'name'">
					<include refid="whereName"/>
				</if>
			</if>
		</where>
	
	</sql>
	
	
	
	
	<sql id="whereID">
		or uid like concat('%',#{keyword},'%')
	</sql>

	<sql id="whereName">
		or uname like concat('%',#{keyword},'%')
	</sql>



	<!--  insert 시 자동 증가하는 idx 값을 파라미터로 전달하는 Member 객체의 idx에 저장 해주는 설정 -->

	<insert id="insertMember"
		parameterType="com.ci.op.member.model.Member"
		useGeneratedKeys="true"
		keyProperty="uidx"
		>

		
		
		insert into finalproject.member (uid, upw, uname, uphoto, uphone) values
		(#{uid}, #{upw}, #{uname}, #{uphoto}, #{uphone})
	</insert>












</mapper>
